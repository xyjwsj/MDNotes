// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as util$0 from "../util/models.js";

export class CategoryItem {
    "key": string;
    "tag": string;

    /** Creates a new CategoryItem instance. */
    constructor($$source: Partial<CategoryItem> = {}) {
        if (!("key" in $$source)) {
            this["key"] = "";
        }
        if (!("tag" in $$source)) {
            this["tag"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new CategoryItem instance from a string or object.
     */
    static createFrom($$source: any = {}): CategoryItem {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new CategoryItem($$parsedSource as Partial<CategoryItem>);
    }
}

export class Preference {
    "username": string;
    "token": string;
    "remoteUrl": string;

    /** Creates a new Preference instance. */
    constructor($$source: Partial<Preference> = {}) {
        if (!("username" in $$source)) {
            this["username"] = "";
        }
        if (!("token" in $$source)) {
            this["token"] = "";
        }
        if (!("remoteUrl" in $$source)) {
            this["remoteUrl"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Preference instance from a string or object.
     */
    static createFrom($$source: any = {}): Preference {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Preference($$parsedSource as Partial<Preference>);
    }
}

export class RecordInfo {
    "uuid": string;
    "fileName": string;
    "status": number;
    "size": number;
    "tag": string;
    "sizeStr": string;
    "category": string;
    "create": util$0.Datetime | null;
    "modify": util$0.Datetime | null;
    "del": util$0.Datetime | null;

    /** Creates a new RecordInfo instance. */
    constructor($$source: Partial<RecordInfo> = {}) {
        if (!("uuid" in $$source)) {
            this["uuid"] = "";
        }
        if (!("fileName" in $$source)) {
            this["fileName"] = "";
        }
        if (!("status" in $$source)) {
            this["status"] = 0;
        }
        if (!("size" in $$source)) {
            this["size"] = 0;
        }
        if (!("tag" in $$source)) {
            this["tag"] = "";
        }
        if (!("sizeStr" in $$source)) {
            this["sizeStr"] = "";
        }
        if (!("category" in $$source)) {
            this["category"] = "";
        }
        if (!("create" in $$source)) {
            this["create"] = null;
        }
        if (!("modify" in $$source)) {
            this["modify"] = null;
        }
        if (!("del" in $$source)) {
            this["del"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new RecordInfo instance from a string or object.
     */
    static createFrom($$source: any = {}): RecordInfo {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new RecordInfo($$parsedSource as Partial<RecordInfo>);
    }
}
